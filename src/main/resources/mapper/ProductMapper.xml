<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tmalllet.mapper.ProductMapper">

    <resultMap id="BaseResultMap" type="com.tmalllet.entity.Product">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="subTitle" column="subTitle" jdbcType="VARCHAR"/>
            <result property="originalPrice" column="originalPrice" jdbcType="FLOAT"/>
            <result property="promotePrice" column="promotePrice" jdbcType="FLOAT"/>
            <result property="stock" column="stock" jdbcType="INTEGER"/>
            <result property="sales" column="sales" jdbcType="INTEGER"/>
            <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
            <result property="createDate" column="createDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,subTitle,
        originalPrice,promotePrice,stock,sales,
        category_id,createDate
    </sql>
    <select id="selectAllByCategoryId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from product
        where
        category_id = #{category_id,jdbcType=NUMERIC}
    </select>
    <select id="selectAllByNameLikeLimit" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from product
        where
        name like concat('%', #{name}, '%')
        limit #{limit}
    </select>
    <select id="selectAllInPromotion" resultType="com.tmalllet.entity.Product">
        select
        <include refid="Base_Column_List"/>
        from product, promotion
        where product.id = promotion.product_id
    </select>
    <update id="increaseSales">
        update product
        set sales = sales + #{amount, jdbcType=NUMERIC}
        where id = #{pid, jdbcType=INTEGER}
    </update>
    <update id="decreaseStock">
        update product
        set stock = stock - #{amount,jdbcType=NUMERIC}
        where id = #{pid,jdbcType=INTEGER} and stock >= #{amount,jdbcType=NUMERIC}
    </update>
</mapper>
